steps:
- name: python
  dir: apps/core
  entrypoint: python
  args: ['-m', 'pip', 'install', '-r', 'requirements.txt', '-r', 'requirements-dev.txt']

- name: python
  dir: apps/core
  entrypoint: 'bin/lint'
  env:
  - EAVE_HOME=$_EAVE_HOME

- name: python
  dir: apps/core
  entrypoint: 'bin/test'
  env:
  - EAVE_HOME=$_EAVE_HOME

- name: python
  dir: apps/core
  entrypoint: python
  args: ['-m', 'alembic', 'upgrade', 'head']
  env:
  - EAVE_HOME=$_EAVE_HOME

- name: ubuntu
  dir: apps/core
  entrypoint: $EAVE_HOME/develop/shared/bin/setup-deployment-workspace
  env:
  - EAVE_HOME=$_EAVE_HOME

- name: python
  dir: $EAVE_HOME/.build/core
  entrypoint: python
  args: ['-m', 'pip', 'install', '-t', 'vendor', '-r', 'requirements-vendor.txt']

- name: gcr.io/google.com/cloudsdktool/cloud-sdk
  dir: $EAVE_HOME/.build/core
  entrypoint: 'bash'
  args: ['-c', 'gcloud', 'app', 'deploy', '--version=${REF_NAME}', '--appyaml=app.${PROJECT_ID}.yaml']
  env:
  - "GOOGLE_CLOUD_PROJECT='$PROJECT_ID'"
  secretEnv:
  - EAVE_DB_HOST
  - EAVE_DB_USER
  - EAVE_DB_PASS
  - EAVE_DB_NAME

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/EAVE_DB_HOST/versions/latest
    env: 'EAVE_DB_HOST'
  - versionName: projects/$PROJECT_ID/secrets/EAVE_DB_USER/versions/latest
    env: 'EAVE_DB_USER'
  - versionName: projects/$PROJECT_ID/secrets/EAVE_DB_PASS/versions/latest
    env: 'EAVE_DB_PASS'
  - versionName: projects/$PROJECT_ID/secrets/EAVE_DB_NAME/versions/latest
    env: 'EAVE_DB_NAME'

timeout: '1600s'
